package _9_generic_programing_principle;

import java.util.Random;

public class Item59 {
    /**
     * [Item59] 라이브러리를 익히고 사용하라
     * 
     * [핵심]
     * 바퀴를 다시 발명하지 말자. 아주 특별한 나만의 기능이 아니라면 누군가 이미 라이브러리 형태로
     * 구현해놓았을 가능성이 크다. 그런 라이브러리가 있다면, 쓰면 된다.
     * 있는지 잘 모르겠다면 찾아보라. 일반적으로 라이브러리의 코드는 여럽누이 직접 작성한 것보다
     * 품질이 좋고, 점차 개선될 가능성이 크다. 여러분의 실력을 펌하하는게 아니다. 코드 품질에도
     * 규모의 경제가 적용된다. 즉, 라이브러리 코드는 개발자 각자가 작성하는 것보다
     * 주목을 훨신 많이 받으므로 코드 품질도 그만큼 높아진다.
     * 
     */

    // [1] 흔하지만 문제가 심각한 코드!
    static Random rnd = new Random();

    static int random(int n) {
        return Math.abs(rnd.nextInt()) % n;

        // 1) n이 그리 크지 않은 2의 제곱수라면 얼마 지나지 않아 같은 수열이 반복된다.
        // 2) n이 2의 제곱수가 아니라면 몇몇 숫자가 평균적으로 더 자주 반환된다.
    }
}