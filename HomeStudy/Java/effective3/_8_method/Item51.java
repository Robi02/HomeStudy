package _8_method;

public class Item51 {
    /**
     * [Item51] 메서드 시그니처를 신중히 설계하라
     * 
     * [핵심]
     * 1. 메서드 이름을 신중히 짓자. (표준 명명 규칙 Item68을 따르자)
     * 2. 편의 메서드를 너무 많이 만들지 말자. (확신이 서지 않으면 만들지 말라)
     * 3. 매개변수 목록은 짧게 유지하자. (4개 이하가 좋고, 같은 타입이 연속적으로 나오는 경우 특히 해롭다)
     * 4. 매개변수의 타입으로는 클래스보다 인터페이스가 더 낫다.
     * 5. boolean보다는 원소 2개짜리 열거 타입이 낫다.
     * 
     * -> 직교성이 높으면 공통점이 없는 작은 구성으로 잘 분해가 된 것 (ex.RISC/MSA)
     * -> 직교성이 낮으면 그와 반대 (ex.CISC/Monolithic)
     *
     * => 직교성이 높으면 중복이 줄고 결합성이 낮아져서 코드 수정과 테스트가 수월해진다.
     *    그러나, 무한정 작게 나눈다고(직교성이 높다고) 능사는 아니다. API는 사용자의 눈높이에 맞게,
     *    다루는 개념의 추상화 수준에 맞게 조절해야 한다. 특정 좋바의 패턴이 상당히 자주 사용하거나
     *    최적화하여 성능을 크게 개선시킬 수 있다면 직교성이 낮아지더라도 편의 기능으로
     *    제공하는 것이 더 나을 수도 있다는 것을 기억하자.
     * 
     */
}