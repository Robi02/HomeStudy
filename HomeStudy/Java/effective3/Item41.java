public class Item41 {
    /**
     * [Item41] 정의하려는 것이 타입이라면 마커 인터페이스를 사용하라
     * 
     * [핵심]
     * 마커 인터페이스와 마커 애너테이션은 각자의 쓰임이 있다.
     * 새로 추가하는 메서드 없이 단지 타입 정의가 목적이라면 마커 인터페이스를 선택하자.
     * 클래스나 인터페이스 외의 프로그램 요소에 마킹해야 하거나, 애너테이션을 적극 활용하는 프레임워크
     * 의 일부로 그 마커를 편입시키고자 한다면 마커 애너테이션이 올바른 선택이다.
     * 적용 대상이 ElementType.TYPE인 마커 애너테이션을 작성하고 있다면,
     * 잠시 여유를 갖고 정말 애너테이션으로 구현하는게 옳은지, 혹은 마커 인터페이스가 낫지는 않을지
     * 곰곰이 생각 해보자. (특히, 마킹된 객체를 매개변수로 받는 메서드를 작성하는 경우에는 
     * 컴파일타임에 실수를 잡아낼 수 있는 마커 인터페이스가 유리하다!)
     * 
     * [마커 인터페이스]
     * Serializable처럼 특정 속성을 가짐을 표시해주고 아무 메서드가 담기지 않은 인터페이스.
     * 
     * [마커 인터페이스가 마커 애너테이션보다 더 나은 점]
     * 1) 마커 인터페이스는 이를 구현한 클래스의 인스턴스들을 구분하는 타입으로 쓸 수 있다.
     *    (컴파일 타임에 오류를 잡아낼 수 있다)
     * 2) 적용 대상을 더 정밀하게 지정할 수 있다.
     * 
     * [마커 애너티에션이 매커 인터페이스보다 더 나은 점]
     * 1) 거대한 애너테이션 시스템의 지원을 받는다.
     * 
     */
}